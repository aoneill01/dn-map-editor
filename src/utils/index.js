import { List } from 'immutable';
import * as R from 'rambda';

export const initTileValues = parseTileValues([66, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 82, 17, 66, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 22, 25, 25, 20, 82, 17, 17, 17, 66, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 82, 17, 17, 17, 17, 17, 66, 17, 17, 17, 17, 17, 17, 17, 17, 17, 64, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 65, 17, 17, 22, 25, 25, 20, 17, 17, 17, 17, 17, 17, 17, 17, 64, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 65, 17, 17, 17, 17, 17, 17, 64, 37, 38, 25, 25, 25, 72, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 73, 25, 25, 25, 90, 36, 37, 65, 22, 25, 25, 20, 17, 17, 17, 17, 17, 17, 64, 37, 38, 41, 41, 41, 73, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 36, 37, 37, 37, 65, 17, 64, 38, 25, 25, 72, 41, 41, 42, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 40, 41, 73, 25, 25, 25, 25, 36, 38, 25, 25, 36, 37, 65, 17, 17, 17, 64, 34, 21, 21, 21, 21, 21, 40, 41, 41, 41, 41, 73, 74, 25, 25, 25, 90, 25, 25, 25, 25, 25, 36, 65, 22, 90, 72, 41, 42, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 40, 73, 25, 25, 25, 25, 25, 25, 25, 25, 25, 20, 17, 17, 17, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 40, 73, 25, 72, 41, 41, 41, 41, 41, 73, 25, 25, 20, 22, 25, 26, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 8, 9, 10, 21, 21, 21, 21, 21, 21, 21, 21, 40, 41, 41, 41, 73, 25, 90, 25, 25, 25, 36, 65, 17, 64, 34, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 25, 26, 21, 21, 21, 21, 21, 40, 73, 25, 20, 22, 25, 26, 21, 21, 21, 21, 21, 67, 68, 68, 69, 21, 21, 40, 41, 42, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 40, 41, 73, 25, 25, 25, 25, 20, 17, 18, 21, 21, 21, 21, 21, 21, 21, 67, 0, 5, 5, 5, 5, 6, 25, 26, 21, 21, 21, 21, 21, 21, 24, 25, 20, 80, 6, 26, 21, 21, 21, 21, 21, 84, 64, 65, 100, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 40, 73, 25, 25, 25, 20, 17, 18, 10, 21, 21, 21, 21, 21, 21, 84, 81, 17, 17, 17, 101, 38, 73, 88, 10, 21, 21, 21, 21, 21, 24, 25, 20, 17, 22, 26, 21, 21, 21, 21, 21, 84, 80, 81, 100, 21, 21, 21, 21, 21, 21, 8, 9, 10, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 25, 25, 25, 20, 17, 18, 88, 10, 21, 21, 21, 21, 21, 115, 116, 116, 116, 116, 117, 21, 24, 25, 88, 9, 10, 21, 21, 21, 24, 4, 81, 17, 22, 26, 21, 21, 21, 21, 21, 115, 116, 116, 117, 21, 21, 21, 8, 9, 9, 89, 55, 26, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 25, 25, 25, 20, 17, 18, 25, 88, 10, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 40, 41, 73, 55, 26, 21, 21, 21, 24, 20, 17, 17, 80, 6, 21, 21, 21, 21, 21, 21, 21, 21, 21, 8, 9, 9, 89, 72, 41, 41, 41, 42, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 25, 74, 25, 20, 17, 18, 25, 25, 88, 10, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 72, 42, 21, 21, 8, 89, 20, 17, 17, 17, 80, 2, 21, 21, 8, 9, 9, 9, 9, 9, 89, 25, 55, 72, 42, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 8, 9, 9, 89, 25, 25, 25, 20, 64, 34, 25, 90, 25, 88, 9, 10, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 26, 21, 21, 21, 24, 4, 81, 17, 17, 17, 17, 80, 6, 9, 89, 25, 72, 41, 41, 41, 41, 41, 41, 42, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 5, 6, 89, 25, 25, 25, 25, 25, 25, 20, 18, 74, 25, 25, 25, 25, 25, 88, 10, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 26, 21, 21, 8, 89, 20, 17, 17, 17, 17, 17, 17, 80, 6, 25, 74, 42, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 36, 65, 80, 5, 5, 5, 5, 5, 5, 5, 81, 18, 41, 41, 41, 73, 25, 25, 90, 26, 21, 21, 21, 21, 21, 21, 21, 21, 8, 89, 88, 9, 9, 89, 4, 81, 17, 17, 17, 17, 66, 17, 17, 80, 5, 5, 5, 5, 5, 2, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 36, 65, 82, 17, 17, 17, 17, 17, 17, 17, 34, 21, 21, 21, 40, 41, 41, 41, 42, 21, 21, 21, 21, 8, 9, 9, 9, 89, 4, 5, 5, 5, 5, 81, 17, 17, 82, 17, 17, 17, 17, 17, 17, 17, 17, 82, 17, 17, 80, 5, 5, 5, 5, 5, 2, 21, 21, 21, 21, 21, 21, 21, 8, 89, 25, 20, 17, 17, 17, 66, 17, 17, 17, 17, 100, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 8, 9, 89, 52, 53, 54, 25, 36, 37, 37, 37, 37, 37, 37, 65, 17, 17, 17, 17, 17, 82, 66, 17, 17, 17, 17, 17, 17, 80, 81, 17, 17, 17, 80, 5, 5, 5, 5, 6, 9, 9, 89, 25, 25, 36, 37, 37, 37, 37, 37, 99, 17, 17, 100, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 40, 41, 41, 73, 25, 25, 25, 90, 25, 72, 41, 41, 41, 73, 36, 65, 82, 17, 17, 17, 17, 17, 17, 64, 65, 17, 17, 17, 17, 17, 17, 17, 66, 82, 17, 80, 81, 17, 80, 6, 25, 25, 25, 72, 41, 41, 73, 25, 88, 10, 115, 116, 116, 117, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 40, 41, 73, 74, 25, 25, 26, 21, 21, 21, 40, 73, 20, 17, 17, 17, 17, 17, 17, 17, 80, 81, 17, 17, 17, 17, 82, 17, 17, 17, 17, 17, 17, 17, 17, 17, 80, 6, 74, 25, 26, 21, 21, 40, 41, 73, 26, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 25, 25, 25, 88, 9, 10, 21, 21, 40, 20, 66, 17, 17, 17, 17, 17, 17, 17, 17, 82, 17, 17, 17, 17, 17, 17, 17, 17, 17, 66, 17, 17, 17, 17, 80, 6, 90, 26, 21, 21, 21, 21, 24, 88, 9, 9, 9, 9, 9, 10, 21, 21, 0, 2, 21, 21, 21, 21, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 26, 21, 21, 21, 20, 17, 17, 17, 17, 17, 82, 17, 17, 17, 17, 17, 66, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 82, 17, 17, 80, 6, 88, 9, 9, 9, 9, 89, 25, 25, 25, 90, 25, 25, 88, 10, 21, 16, 80, 68, 68, 68, 68, 81, 66, 17, 17, 17, 80, 81, 17, 82, 17, 22, 88, 10, 21, 21, 20, 17, 82, 17, 66, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 82, 17, 17, 17, 66, 17, 17, 17, 80, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 81, 17, 17, 80, 81, 17, 17, 17, 17, 17, 82, 17, 17, 17, 17, 17, 22, 25, 26, 21, 21, 20, 17, 17, 17, 64, 65, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 80, 81, 17, 17, 17, 66, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 64, 65, 17, 17, 17, 17, 17, 22, 25, 88, 10, 21, 20, 17, 17, 64, 34, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 32, 33, 33, 33, 65, 17, 22, 25, 25, 88, 9, 20, 17, 64, 34, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 82, 22, 25, 25, 25, 25, 20, 64, 34, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 22, 90, 25, 25, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 22, 25, 25, 25, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 20, 17, 22, 25, 25, 25, 90, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 22, 25, 25, 74, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 22, 72, 41, 73, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 22, 26, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 22, 26, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 22, 26, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 22, 26, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 22, 26, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 22, 26, 21, 24, 74, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 51, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 32, 65, 22, 26, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 22, 88, 9, 89, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 22, 25, 72, 41, 73, 20, 18, 21, 21, 21, 21, 51, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 22, 25, 26, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 22, 25, 26, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 22, 25, 26, 21, 24, 20, 18, 21, 51, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 22, 25, 26, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 32, 65, 22, 25, 26, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 22, 25, 26, 21, 24, 20, 18, 21, 48, 49, 49, 49, 50, 21, 21, 21, 21, 48, 49, 49, 49, 49, 50, 21, 21, 21, 21, 48, 49, 49, 49, 50, 21, 21, 21, 21, 48, 49, 49, 50, 21, 21, 21, 21, 48, 49, 50, 21, 21, 21, 21, 48, 49, 50, 21, 0, 5, 5, 2, 21, 21, 21, 21, 16, 22, 25, 26, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 66, 64, 34, 21, 21, 21, 21, 16, 22, 25, 26, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 82, 18, 21, 21, 21, 21, 21, 16, 22, 25, 88, 9, 89, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 18, 21, 21, 21, 21, 0, 81, 22, 25, 25, 25, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 22, 21, 21, 21, 21, 32, 65, 22, 90, 25, 25, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 18, 21, 21, 21, 21, 21, 16, 22, 25, 25, 72, 41, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 17, 80, 2, 21, 21, 21, 21, 16, 22, 25, 25, 26, 21, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 64, 34, 21, 21, 21, 21, 16, 22, 74, 25, 26, 21, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 18, 21, 21, 21, 21, 21, 16, 22, 25, 90, 26, 21, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 17, 17, 18, 21, 21, 21, 21, 0, 81, 22, 25, 25, 26, 21, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 17, 22, 21, 21, 21, 21, 32, 65, 22, 41, 73, 26, 21, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 82, 17, 17, 18, 21, 21, 21, 21, 21, 16, 22, 21, 24, 26, 21, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 17, 17, 17, 80, 2, 21, 21, 21, 21, 16, 22, 21, 24, 26, 21, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 66, 17, 64, 34, 21, 21, 21, 21, 16, 22, 21, 24, 26, 21, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 17, 17, 18, 21, 21, 21, 21, 21, 16, 22, 21, 24, 26, 21, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 17, 17, 82, 17, 18, 21, 21, 21, 21, 0, 81, 22, 21, 24, 26, 21, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 82, 17, 17, 17, 17, 17, 18, 21, 21, 21, 21, 32, 65, 22, 21, 24, 88, 9, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 17, 17, 17, 18, 21, 21, 21, 21, 21, 16, 22, 21, 40, 73, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 17, 66, 17, 17, 17, 80, 2, 21, 21, 21, 21, 16, 22, 21, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 17, 17, 17, 82, 64, 34, 21, 21, 21, 21, 16, 22, 21, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 82, 17, 17, 17, 66, 18, 21, 21, 21, 21, 21, 16, 22, 21, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 17, 17, 17, 17, 17, 17, 18, 21, 21, 21, 21, 0, 81, 22, 21, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 21, 21, 21, 21, 32, 65, 22, 10, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 66, 17, 17, 17, 17, 17, 18, 21, 21, 21, 21, 21, 16, 22, 26, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 17, 17, 17, 82, 17, 17, 17, 80, 2, 21, 21, 21, 21, 16, 22, 26, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 82, 17, 17, 17, 17, 66, 17, 17, 64, 34, 21, 21, 21, 21, 16, 22, 26, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 21, 21, 21, 21, 21, 16, 22, 26, 21, 24, 25, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 21, 21, 21, 21, 0, 81, 22, 26, 21, 40, 73, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 66, 17, 17, 17, 17, 82, 17, 17, 18, 21, 21, 21, 21, 32, 37, 38, 26, 21, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 82, 17, 17, 17, 17, 17, 17, 18, 21, 21, 21, 21, 21, 40, 41, 42, 21, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 17, 17, 17, 17, 66, 17, 17, 17, 17, 80, 2, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 66, 17, 17, 22, 9, 9, 9, 9, 9, 9, 10, 21, 21, 24, 20, 18, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 0, 81, 17, 66, 17, 17, 17, 82, 17, 17, 17, 17, 17, 17, 80, 5, 5, 5, 5, 5, 6, 88, 9, 9, 89, 20, 80, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 21, 21, 4, 5, 81, 17, 17, 82, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 66, 17, 17, 17, 17, 17, 80, 5, 5, 5, 5, 81])

export function parseTileValues(value) {
    let result = List();
    for (let row = 0; row < 80; row++) {
        let offset = row * 64;
        result = result.push(List(value.slice(offset, offset + 64)));
    }
    return result;
}

export function setTile(rowValues, rowIndex, colIndex, value) {
    return rowValues.set(rowIndex, rowValues.get(rowIndex).set(colIndex, value));
}

export function getTile(rowValues, rowIndex, colIndex) {
    const row = rowValues.get(rowIndex);
    return (row ? row.get(colIndex) : undefined);
}

export function isGround(value) {
    return (value >= 0 && value <= 7) ||
        (value >= 16 && value <= 20) || (value >= 22 && value <= 23) ||
        (value >= 32 && value <= 39) ||
        (value >= 48 && value <= 55) ||
        (value >= 64 && value <= 66) ||
        (value >= 80 && value <= 82)
}

export function autoDrawGround(rowValues, rowIndex, colIndex) {
    return R.compose(
        fixGroundTile(rowIndex + 1, colIndex - 1),
        fixGroundTile(rowIndex + 1, colIndex),
        fixGroundTile(rowIndex + 1, colIndex + 1),
        fixGroundTile(rowIndex, colIndex - 1),
        fixGroundTile(rowIndex, colIndex + 1),
        fixGroundTile(rowIndex - 1, colIndex - 1),
        fixGroundTile(rowIndex - 1, colIndex),
        fixGroundTile(rowIndex - 1, colIndex + 1),
        fixGroundTile(rowIndex, colIndex)
    )(setTile(rowValues, rowIndex, colIndex, 17));
}

export function fixGroundTile(rowIndex, colIndex) {
    return (rowValues) => {
        if (!isGround(getTile(rowValues, rowIndex, colIndex))) return rowValues;

        let northIsGround = isGround(getTile(rowValues, rowIndex - 1, colIndex));
        let southIsGround = isGround(getTile(rowValues, rowIndex + 1, colIndex));
        let westIsGround = isGround(getTile(rowValues, rowIndex, colIndex - 1));
        let eastIsGround = isGround(getTile(rowValues, rowIndex, colIndex + 1));
        let northWestIsGround = isGround(getTile(rowValues, rowIndex - 1, colIndex - 1));
        let southWestIsGround = isGround(getTile(rowValues, rowIndex + 1, colIndex - 1));
        let northEastIsGround = isGround(getTile(rowValues, rowIndex - 1, colIndex + 1));
        let southEastIsGround = isGround(getTile(rowValues, rowIndex + 1, colIndex + 1));

        if (!northIsGround && eastIsGround && southIsGround && !westIsGround) return setTile(rowValues, rowIndex, colIndex, 0);
        if (!northIsGround && eastIsGround && southIsGround && westIsGround) return setTile(rowValues, rowIndex, colIndex, 1);
        if (!northIsGround && !eastIsGround && southIsGround && westIsGround) return setTile(rowValues, rowIndex, colIndex, 2);
        if (northIsGround && eastIsGround && southIsGround && !westIsGround) return setTile(rowValues, rowIndex, colIndex, 16);
        if (northIsGround && !eastIsGround && southIsGround && westIsGround) return setTile(rowValues, rowIndex, colIndex, 18);
        if (northIsGround && eastIsGround && !southIsGround && !westIsGround) return setTile(rowValues, rowIndex, colIndex, 32);
        if (northIsGround && eastIsGround && !southIsGround && westIsGround) return setTile(rowValues, rowIndex, colIndex, 33);
        if (northIsGround && !eastIsGround && !southIsGround && westIsGround) return setTile(rowValues, rowIndex, colIndex, 34);
        if (!northIsGround && !eastIsGround && southIsGround && !westIsGround) return setTile(rowValues, rowIndex, colIndex, 3);
        if (northIsGround && !eastIsGround && southIsGround && !westIsGround) return setTile(rowValues, rowIndex, colIndex, 19);
        if (northIsGround && !eastIsGround && !southIsGround && !westIsGround) return setTile(rowValues, rowIndex, colIndex, 35);
        if (!northIsGround && eastIsGround && !southIsGround && !westIsGround) return setTile(rowValues, rowIndex, colIndex, 48);
        if (!northIsGround && eastIsGround && !southIsGround && westIsGround) return setTile(rowValues, rowIndex, colIndex, 49);
        if (!northIsGround && !eastIsGround && !southIsGround && westIsGround) return setTile(rowValues, rowIndex, colIndex, 50);
        if (!northIsGround && !eastIsGround && !southIsGround && !westIsGround) return setTile(rowValues, rowIndex, colIndex, 51);

        if (!northWestIsGround) return setTile(rowValues, rowIndex, colIndex, 81);
        if (!southWestIsGround) return setTile(rowValues, rowIndex, colIndex, 65);
        if (!northEastIsGround) return setTile(rowValues, rowIndex, colIndex, 80);
        if (!southEastIsGround) return setTile(rowValues, rowIndex, colIndex, 64);

        return setTile(rowValues, rowIndex, colIndex, 17);
    }
}

export function hitType(value) {
    // Spike
    if ([67, 68, 69, 84, 100, 115, 116, 117].includes(value)) return 2;
    // Empty
    if (value === 21) return 0;
    // Left half of tiles
    if ((value % 16) < 8) return 1;
    return 0;
}